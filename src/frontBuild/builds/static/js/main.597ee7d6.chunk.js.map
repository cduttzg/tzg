{"version":3,"sources":["utils/Request.js","components/LoginForm.js","components/DrawerRegisterForm.js","components/TopHeader.js","components/Home.js","components/App.js","index.js"],"names":["handlResponse","url","response","status","json","console","error","concat","statusText","message","LoginForm","handleSubmit","e","preventDefault","submit","_this","props","validateFields","err","values","log","data","fetch","method","headers","Headers","Content-Type","body","JSON","stringify","then","catch","messge","Post","用户名","username","密码","btoa","password","user","isFrozen","getFieldDecorator","this","react_default","a","createElement","es_form","onSubmit","className","Item","rules","required","input","prefix","icon","type","style","color","placeholder","valuePropName","initialValue","es_checkbox","href","es_button","htmlType","React","Component","RegistrationForm","state","confirmDirty","autoCompleteResult","validateFieldsAndScroll","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","form","getFieldValue","validateToNextPassword","force","handleWebsiteChange","map","domain","tailFormItemLayout","wrapperCol","xs","span","offset","sm","Object","assign","labelCol","label","hasFeedback","validator","Password","onBlur","tooltip","title","whitespace","width","Header","Layout","Search","Input","TopHeader","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleLoginClick","modal","visible","handleRegisterClick","drawer","handleLoginModalCancle","handleRegisterModalCancle","handleLoginFormSubmit","role","isLogin","avatarSrc","modalText","drawerText","WrappedLoginForm","Form","create","name","WrappedRegisterForm","DrawerRegisterForm","avatarMenu","menu","key","Divider","id","position","zIndex","dropdown","overlay","trigger","avatar","size","src","onClick","es_drawer","onClose","es_modal","onCancel","okText","cancelText","onSearch","enterButton","theme","mode","defaultSelectedKeys","lineHeight","Home","TopHeader_TopHeader","App","ifLogin","react_router_dom","react_router","exact","path","component","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.597ee7d6.chunk.js","sourcesContent":["function Get(url){\r\n    return fetch(url, {\r\n        method : \"GET\",\r\n        headers : new Headers({\r\n            'Content-Type': 'application/json'\r\n        })\r\n    }).then(response => {\r\n        return handlResponse(url, response);\r\n    }).catch(error => {\r\n        console.error(`Requset failed. Url=${url}. Message=${error}`);\r\n        return {\r\n            error : {\r\n                messge : 'request failed'\r\n            }\r\n        };\r\n    });\r\n}\r\nfunction Post(url, data){\r\n    return fetch(url, {\r\n        method : \"POST\",\r\n        headers : new Headers({\r\n            'Content-Type': 'application/json'\r\n        }),\r\n        body : JSON.stringify(data)\r\n    }).then(response => {\r\n        return handlResponse(url, response);\r\n    }).catch(error => {\r\n        console.error(`Requset failed. Url=${url}. Message=${error}`);\r\n        return {\r\n            error : {\r\n                messge : 'request failed'\r\n            }\r\n        };\r\n    });\r\n}\r\nfunction PutImage(url, formData){\r\n    return fetch(url, {\r\n        method : \"PUT\",\r\n        body : formData\r\n    }).then(response => {\r\n        return handlResponse(url, response);\r\n    }).catch(error => {\r\n        console.error(`input image failed. Url=${url}. Message=${error}`);\r\n        return {\r\n            error : {\r\n                messge : 'request failed'\r\n            }\r\n        };\r\n    })\r\n}\r\nfunction handlResponse(url, response){\r\n    if(response.status < 500){\r\n        return response.json();\r\n    }else{\r\n        console.error(`Requset failed. Url=${url}. Message=${response.statusText}`);\r\n        return {\r\n            error : {\r\n                message : 'request failed due to server error'\r\n            }\r\n        }\r\n    }\r\n}\r\nexport {\r\n    Get, Post, PutImage\r\n}","import React from 'react';\r\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\r\nimport '../stylesheets/LoginForm.css';\r\nimport { Post } from '../utils/Request';\r\n\r\nexport default class LoginForm extends React.Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const submit = this.props['handleSubmit'];\r\n    this.props['form'].validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n        const url = '/api/user/login';\r\n        const data = {\"用户名\" : values.username, \"密码\" : btoa(values.password)};\r\n        const res = Post(url, data);\r\n        res.then(data => {\r\n          const user = {\r\n            username : values.username,\r\n            isFrozen : data['是否被冻结']\r\n          };\r\n          submit(user);\r\n        })\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props['form'];\r\n    return (\r\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n        <Form.Item>\r\n          {getFieldDecorator('username', {\r\n            rules: [{ required: true, message: '请输入你的用户名！' }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder=\"用户名\"\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('password', {\r\n            rules: [{ required: true, message: '请输入你的密码！' }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              type=\"password\"\r\n              placeholder=\"你的密码\"\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('remember', {\r\n            valuePropName: 'checked',\r\n            initialValue: true,\r\n          })(<Checkbox>Remember me</Checkbox>)}\r\n          <a className=\"login-form-forgot\" href=\"seefun.club\">\r\n              忘记密码\r\n          </a>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n              登陆\r\n          </Button>\r\n          或者  <a href=\"seefun.club\">注册一个</a>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tooltip,\r\n  Icon,\r\n  Checkbox,\r\n  Button\r\n} from 'antd';\r\nimport '../stylesheets/DrawerRegisterForm.css'\r\n\r\nexport default class RegistrationForm extends React.Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: [],\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props['form'].validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleConfirmBlur = e => {\r\n    const { value } = e.target;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props['form'];\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('两次输入的密码不一致！');\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const form = this.props['form'];\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields(['confirm'], { force: true });\r\n    }\r\n    callback();\r\n  };\r\n\r\n  handleWebsiteChange = value => {\r\n    let autoCompleteResult;\r\n    if (!value) {\r\n      autoCompleteResult = [];\r\n    } else {\r\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\r\n    }\r\n    this.setState({ autoCompleteResult });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props['form'];\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n    return (\r\n      <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n        <Form.Item label=\"电子邮箱\">\r\n          {getFieldDecorator('email', {\r\n            rules: [\r\n              {\r\n                type: 'email',\r\n                message: '输入的邮箱格式不规范！',\r\n              },\r\n              {\r\n                required: true,\r\n                message: '请输入你的电子邮箱！',\r\n              },\r\n            ],\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"密码\" hasFeedback>\r\n          {getFieldDecorator('password', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: '请输入你的密码！',\r\n              },\r\n              {\r\n                validator: this.validateToNextPassword,\r\n              },\r\n            ],\r\n          })(<Input.Password />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"确认密码\" hasFeedback>\r\n          {getFieldDecorator('confirm', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: '请确认你输入的密码！',\r\n              },\r\n              {\r\n                validator: this.compareToFirstPassword,\r\n              },\r\n            ],\r\n          })(<Input.Password onBlur={this.handleConfirmBlur} />)}\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={\r\n            <span>\r\n              用户名&nbsp;\r\n              <Tooltip title=\"请输入你的用户名\">\r\n                <Icon type=\"question-circle-o\" />\r\n              </Tooltip>\r\n            </span>\r\n          }\r\n        >\r\n          {getFieldDecorator('nickname', {\r\n            rules: [{ required: true, message: '请输入你的用户名！', whitespace: true }],\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"电话号码\">\r\n          {getFieldDecorator('phone', {\r\n            rules: [{ required: true, message: '请输入你的电话号码！' }],\r\n          })(<Input style={{ width: '100%' }} />)}\r\n        </Form.Item>\r\n        <Form.Item {...tailFormItemLayout}>\r\n          {getFieldDecorator('agreement', {\r\n            valuePropName: 'checked',\r\n          })(\r\n            <Checkbox>\r\n              我已经阅读并同意<a href=\"seefun.club\">用户协议</a>\r\n            </Checkbox>,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            注册\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}","import { Layout, Menu, Input, Avatar, Modal, Button, Form, Drawer, Dropdown } from 'antd';\r\nimport React,{Component} from 'react';\r\nimport LoginForm from './LoginForm';\r\nimport DrawerRegisterForm from './DrawerRegisterForm';\r\nimport '../stylesheets/TopHeader.css';\r\n\r\nconst { Header } = Layout;\r\nconst { Search } = Input;\r\n\r\nexport default class TopHeader extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            user : {\r\n                role : 0,\r\n                username : '',\r\n                isLogin : false,\r\n                avatarSrc : null,\r\n                isFrozen : false\r\n            },\r\n            modal : {\r\n                modalText : '',\r\n                visible : false\r\n            },\r\n            drawer : {\r\n                drawerText : '',\r\n                visible : false\r\n            }\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        \r\n    }\r\n    render(){\r\n        let user = this.state['user'], modal = this.state['modal'], drawer = this.state['drawer'];\r\n        const WrappedLoginForm = Form.create({ name: 'normal_login' })(LoginForm);\r\n        const WrappedRegisterForm = Form.create({ name: 'register' })(DrawerRegisterForm);\r\n        const avatarMenu = (\r\n            <Menu>\r\n                <Menu.Item key='0'>\r\n                    <a href='seefun.club'>个人信息管理</a>\r\n                </Menu.Item>\r\n                <Menu.Divider />\r\n                <Menu.Item key='1'>\r\n                    <a href='seefun.club'>卖家信息管理</a>\r\n                </Menu.Item>\r\n                <Menu.Divider />\r\n                <Menu.Item key='2'>\r\n                    <a href='seefun.club'>查看订单信息</a>\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n        return(\r\n            <Header id=\"header\" style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\r\n                <div className=\"logo\" />\r\n                <div className=\"siteName\">贝壳</div>\r\n                {!user['isLogin'] ? <Avatar className='userAvatar' size={40} icon=\"user\" /> : <Dropdown overlay={avatarMenu} trigger={['click']}><Avatar className='userAvatar' size={40} src={user['avatarSrc']} /></Dropdown>}\r\n                {!user['isLogin'] ? <div className='register'>\r\n                    <Button onClick={this.handleRegisterClick}>注册</Button>\r\n                    <Drawer \r\n                        title='注册属于你的账户' \r\n                        width={700} \r\n                        onClose={this.handleRegisterModalCancle} \r\n                        visible={drawer.visible}>\r\n                        <WrappedRegisterForm />\r\n                    </Drawer>\r\n                    </div> : null }\r\n                {!user['isLogin'] ? <div className='login'>\r\n                    <Button onClick={this.handleLoginClick}>登陆</Button>\r\n                    <Modal visible={modal.visible} onCancel={this.handleLoginModalCancle} title='登陆' okText='登陆' cancelText='取消'>\r\n                        <WrappedLoginForm handleSubmit={this.handleLoginFormSubmit} />\r\n                    </Modal>\r\n                    </div> : null }\r\n                <div className=\"forSearch\">\r\n                    <Search placeholder='输入你想查找的物品名称' onSearch={value=>{console.log(value)}} enterButton ></Search>\r\n                </div>\r\n                <Menu\r\n                    theme=\"light\"\r\n                    mode=\"horizontal\"\r\n                    defaultSelectedKeys={['2']}\r\n                    style={{ lineHeight: '64px' }}\r\n                >\r\n                <Menu.Item key=\"1\">首页</Menu.Item>\r\n                <Menu.Item key=\"2\">福利</Menu.Item>\r\n                {user['role']=== 1 && user['role']=== 2 ? <Menu.Item key=\"3\">后台管理</Menu.Item> : null}          \r\n                </Menu>\r\n            </Header>\r\n        );\r\n    }\r\n    //点击登陆按钮，使得弹窗显示\r\n    handleLoginClick = () => {\r\n        this.setState({\r\n            modal : {\r\n                visible : true\r\n            }\r\n        });\r\n    };\r\n    handleRegisterClick = () => {\r\n        this.setState({\r\n            drawer : {\r\n                visible : true\r\n            }\r\n        });\r\n    }\r\n    handleLoginModalCancle = () => {\r\n        this.setState({\r\n            modal : {\r\n                visible : false\r\n            }\r\n        });\r\n    };\r\n    handleRegisterModalCancle = () =>{\r\n        this.setState({\r\n            drawer : {\r\n                visible : false\r\n            }\r\n        });\r\n    };\r\n    //resolve login event\r\n    handleLoginFormSubmit = (user) => {\r\n        this.setState({\r\n            user : user\r\n        })\r\n    }\r\n}","import {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport React,{Component} from 'react';\r\nimport TopHeader from './TopHeader';\r\n\r\nexport default class Home extends Component{\r\n    render(){\r\n        return(<TopHeader />);\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport '../stylesheets/App.css';\r\nimport Home from './Home';\r\n\r\nexport default class App extends Component{\r\n    //全局数据源\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            user : {\r\n                name : '张山',\r\n                role : 0,\r\n                ifLogin : false,\r\n            },\r\n\r\n        };\r\n    }\r\n    render(){\r\n        return(\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path='/' component={Home} />\r\n                </Switch>\r\n            </Router>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}